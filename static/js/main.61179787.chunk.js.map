{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","formInput","onChangeInput","onMoviesQuery","setMovie","setAllMovies","allMovies","useState","touched","setTouched","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","trim","onClick","finedHandler","find","el","prev","App","setMovies","setFormInput","newMovies","setNewMovies","useEffect","Title","Plot","Poster","imdbID","query","fetch","then","res","json","catch","Response","Error","Object","hasOwnProperty","call","finally","classList","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61179787.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  formInput: string,\n  onChangeInput: (value: string) => void,\n  onMoviesQuery: (e: React.MouseEvent<HTMLButtonElement >) => void,\n  movie: null | Movie,\n  setMovie: React.Dispatch<React.SetStateAction<Movie | null>>,\n  setAllMovies: React.Dispatch<React.SetStateAction<Movie[]>>,\n  allMovies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  formInput,\n  onChangeInput,\n  onMoviesQuery,\n  movie,\n  setMovie,\n  setAllMovies,\n  allMovies,\n}) => {\n  const [touched, setTouched] = useState(false);\n\n  const addMoviesHandle = () => {\n    if (!allMovies.find((el) => el.title === movie?.title)) {\n      setAllMovies((prev) => (movie ? [...prev, movie] : prev));\n    }\n\n    setMovie(null);\n    onChangeInput('');\n    setTouched(false);\n  };\n\n  const finedHandler = (e: React.MouseEvent<HTMLButtonElement >) => {\n    setTouched(true);\n    onMoviesQuery(e);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(e) => e.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': !movie && touched,\n              })}\n              value={formInput}\n              onChange={(e) => {\n                onChangeInput(e.target.value);\n                setTouched(false);\n              }}\n            />\n          </div>\n\n          {!movie && touched && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light',\n                { 'is-loading': !movie && touched })}\n              disabled={!formInput.trim()}\n              onClick={(e) => finedHandler(e)}\n            >\n              {!touched ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addMoviesHandle()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\n\nimport { getMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [formInput, setFormInput] = useState('');\n  const [newMovies, setNewMovies] = useState<MovieData | null>(null);\n\n  const changeInput = (value: string) => {\n    setFormInput(value);\n  };\n\n  const moviesQuery = (e: React.MouseEvent<HTMLButtonElement>) => {\n    getMovie(formInput).then(res => {\n      if (!Object.hasOwnProperty.call(res, 'Error')) {\n        setNewMovies(res as MovieData);\n      } else {\n        setNewMovies(null);\n      }\n    }).finally(() => {\n      const t = e.target as HTMLElement;\n\n      t.classList.remove('is-loading');\n    });\n  };\n\n  const [movie, setMovie] = useState<null | Movie>(null);\n\n  useEffect(() => {\n    if (newMovies) {\n      setMovie({\n        title: newMovies.Title,\n        description: newMovies.Plot,\n        imgUrl: newMovies.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : newMovies.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovies.imdbID}`,\n        imdbId: newMovies.imdbID,\n      });\n    }\n  }, [newMovies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          formInput={formInput}\n          onChangeInput={changeInput}\n          onMoviesQuery={moviesQuery}\n          movie={movie}\n          setMovie={setMovie}\n          setAllMovies={setMovies}\n          allMovies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f936cc38';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
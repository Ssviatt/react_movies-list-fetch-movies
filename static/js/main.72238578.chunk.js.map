{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setAllMovies","allMovies","useState","touched","setTouched","formInput","setFormInput","newMovie","setNewMovie","loading","setLoading","setMovie","changeInput","value","moviesQuery","query","fetch","then","res","json","catch","Response","Error","Object","hasOwnProperty","call","finally","useEffect","Title","Plot","Poster","imdbID","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","classNames","onChange","target","changeHandle","disabled","trim","onClick","find","el","prev","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72238578.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\nimport { getMovie } from '../../api';\n\ntype Props = {\n  setAllMovies: React.Dispatch<React.SetStateAction<Movie[]>>,\n  allMovies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  setAllMovies,\n  allMovies,\n}) => {\n  const [touched, setTouched] = useState(false);\n  const [formInput, setFormInput] = useState('');\n  const [newMovie, setNewMovie] = useState<MovieData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<null | Movie>(null);\n\n  const changeInput = (value: string) => {\n    setFormInput(value);\n  };\n\n  const moviesQuery = () => {\n    setLoading(true);\n    getMovie(formInput).then(res => {\n      if (!Object.hasOwnProperty.call(res, 'Error')) {\n        setNewMovie(res as MovieData);\n      } else {\n        setNewMovie(null);\n      }\n    }).finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    if (newMovie) {\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n        imdbId: newMovie.imdbID,\n      });\n    }\n  }, [newMovie]);\n\n  const addMoviesHandle = () => {\n    if (!allMovies.find((el) => el.title === movie?.title)) {\n      setAllMovies((prev) => (movie ? [...prev, movie] : prev));\n    }\n\n    setMovie(null);\n    changeInput('');\n    setTouched(false);\n  };\n\n  const finedHandler = () => {\n    setTouched(true);\n    moviesQuery();\n    setMovie(null);\n  };\n\n  const changeHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeInput(e.target.value);\n    setTouched(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(e) => e.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': !movie && touched && !loading,\n              })}\n              value={formInput}\n              onChange={(e) => changeHandle(e)}\n            />\n          </div>\n\n          {!movie && touched && !loading && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!formInput.trim()}\n              onClick={() => finedHandler()}\n            >\n              {!touched ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addMoviesHandle()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f936cc38';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setAllMovies={setMovies}\n          allMovies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}